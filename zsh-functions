# This is a file full of functions

function chpwd ()
{
    [[ "$should_run_chpwd" == "0" ]] && return

    cl

    check_and_update_git_repo
}

# period is 900 seconds == 15 mins
export PERIOD=900
function periodic ()
{
    check_and_update_git_repo
}

function check_and_update_git_repo ()
{
    local GITDIR
    GITDIR="$(git rev-parse --show-toplevel 2>/dev/null)"
    if [[ "$GITDIR" == "$(pwd)" ]]; then
        # Fetch changes for current branch
        git fetch
    fi
}

function ack () {
    if [ -e ~/bin/ack ] ; then
        ~/bin/ack "$@"
    elif [ -e /usr/bin/ack ] ; then
        /usr/bin/ack "$@"
    else
        \grep -lR "$@" | \grep -v "/\.svn/"
    fi
}

function vack () {
    setopt local_options SH_WORD_SPLIT

    if [ type ag >/dev/null 2>&1 ] ; then
        files="$(ag -l "$@")"
    else
        files="$(ack -l "$@")"
    fi

    if [ -z "$files" ] ; then
        echo "No matches found."
    else
        vim $files
    fi
}

function taile () {
    tail -f /var/log/httpd/$1*-error_log
}

function mdless () {
    pandoc -f markdown -t man --smart --normalize --standalone --toc "$*" | man -l -
}

# loops a command for the specified number of sleep time
function loop () {
    seconds="$1"
    shift
    command="$@"
    while :
    do
        clear
        $command
        sleep $seconds
    done
}

function install () {
    case "$DISTRO" in
        ubuntu)
            # fall through
            ;&
        debian)
            sudo apt-get install "$@"
            ;;
        fedora)
            # fall through
            ;&
        centos)
            # fall through
            ;&
        rhel)
            # fall through
            ;&
        fedora)
            # fall through
            ;&
        redhat)
            sudo yum install "$@"
            ;;
        *)
            echo "Distro '$DISTRO' is unrecognized"
            ;;
    esac
}

function purge () {
    case "$DISTRO" in
        ubuntu)
            # fall through
            ;&
        debian)
            sudo apt-get purge "$@"
            ;;
        fedora)
            # fall through
            ;&
        centos)
            # fall through
            ;&
        rhel)
            # fall through
            ;&
        fedora)
            # fall through
            ;&
        redhat)
            sudo yum remove "$@"
            ;;
        *)
            echo "Distro '$DISTRO' is unrecognized"
            ;;
    esac
}

function update () {
    case "$DISTRO" in
        ubuntu)
            # fall through
            ;&
        debian)
            sudo apt-get update && sudo apt-get upgrade
            ;;
        fedora)
            # fall through
            ;&
        centos)
            # fall through
            ;&
        rhel)
            # fall through
            ;&
        fedora)
            # fall through
            ;&
        redhat)
            sudo yum update
            ;;
        *)
            echo "Distro '$DISTRO' is unrecognized"
            ;;
    esac
}

function search () {
    case "$DISTRO" in
        ubuntu)
            # fall through
            ;&
        debian)
            sudo apt-cache search "$@"
            ;;
        fedora)
            # fall through
            ;&
        centos)
            # fall through
            ;&
        rhel)
            # fall through
            ;&
        fedora)
            # fall through
            ;&
        redhat)
            sudo yum search "$@"
            ;;
        *)
            echo "Distro '$DISTRO' is unrecognized"
            ;;
    esac
}

# echos out with color, e.g.
#   color_echo red "My Error"
#   color_echo yellow "My Warning"
#   color_echo green "My Success"
function color_echo () {
    case $1 in
     red)     
          color=31
          ;;
     green)
          color=32
          ;;
     yellow)
          color=33
          ;;
     *)  
          color=$1
          ;;
    esac

    # remove $1
    shift

    echo -e "\033[1;${color}m$@\033[0m"
}

caution_servers=(
    ".*[.]thdises[.]com"
    ".*[.]neadwerx[.]com"
)

function check_for_caution_server () {
    hostname=`hostname`
    for server in $caution_servers ; do
        if [[ $hostname =~ $server ]] ; then
            return 0
        fi
    done

    return 1
}

function setup_vim_plugins () {
    local plugin_list_file="$DOTFILES/.plugin_list"
    local plugin_list_cmd="cat $DOTFILES/vimrc | grep -P '^\s+Plug\s+' | awk '{print \$2}' | tr -d ','"
    local do_plugin_setup=""

    if [[ ! -f $plugin_list_file ]] ; then
        eval $plugin_list_cmd > $plugin_list_file
        do_plugin_setup="1"
    elif ! eval $plugin_list_cmd | diff -q - $plugin_list_file &>/dev/null ; then
        do_plugin_setup="1"
    fi

    if [[ -n $do_plugin_setup ]] ; then
        color_echo yellow 'Setting up vim plugins...'
        vim -u "$DOTFILES/vimrc" +PlugInstall +PlugUpdate +qall #>/dev/null 2>&1 </dev/null

        eval $plugin_list_cmd > $plugin_list_file
        color_echo green 'Done.'
    fi
}
